  - name: Terraform Destroy with Lock Recovery
    id: terraform_destroy_attempt
    run: |
      cd terraform
      # This step attempts the terraform destroy command.
      # If it fails due to a state lock, it extracts the lock ID,
      # performs a force-unlock, and then retries the destroy operation.

      destroy() {
        terraform destroy -auto-approve \
          -var="github_client_id=${{ secrets.AZURE_CLIENT_ID }}" \
          -var="github_client_secret=${{ secrets.AZURE_CLIENT_SECRET }}" \
          -var="github_tenant_id=${{ secrets.AZURE_TENANT_ID }}" \
          -var="github_subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}"
      }

      echo "Running terraform destroy..."
      if ! destroy 2> destroy.log; then
        if grep -q "Error acquiring the state lock" destroy.log; then
          LOCK_ID=$(grep -A5 "Error acquiring the state lock" destroy.log | grep "ID:" | awk '{print $2}')
          echo "State lock detected. Forcing unlock with ID: $LOCK_ID"
          terraform force-unlock -force "$LOCK_ID"
          echo "Retrying terraform destroy..."
          destroy
        else
          echo "Terraform destroy failed for another reason:"
          cat destroy.log
          exit 1
        fi
      fi